# Use the latest 2.1 version of CircleCI pipeline process engine.
# See: https://circleci.com/docs/configuration-reference
version: 2.1
parameters:
  GHA_Actor:
    type: string
    default: ''
  GHA_Action:
    type: string
    default: ''
  GHA_Event:
    type: string
    default: ''
  GHA_Meta:
    type: string
    default: ''

orbs:
  # The Node.js orb contains a set of prepackaged CircleCI configuration you can utilize
  # Orbs reduce the amount of configuration required for common tasks.
  # See the orb documentation here: https://circleci.com/developer/orbs/orb/circleci/node
  node: circleci/node@5.1.0

jobs:
  build:
    # Build job configuration
    docker:
      - image: node:20-alpine
    steps:
      # Checkout the code from the repository
      - checkout
      - node/install-packages:
          pkg-manager: npm

  test:
    # Test job configuration
    docker:
      - image: mongo:6.0.3
    steps:
      # Update the package list and install curl and sudo
      - run:
          name: Update and install dependencies
          command: |
            apt-get update
            apt-get install -y curl sudo

      # Checkout the code from the repository
      - checkout

      # Install Node.js and npm
      - run:
          name: Install Node.js and npm
          command: |
            curl -fsSL https://deb.nodesource.com/setup_20.x | sudo -E bash -
            sudo apt-get install -y nodejs

      # Install project dependencies from package.json using npm ci
      - run:
          name: Install project dependencies
          command: npm ci

      # Run tests using npm test
      - run:
          name: Run tests
          command: npm test

  deploy-to-vercel:
    # Build job configuration
    docker:
      - image: node:20-alpine
    steps:
      # Checkout the code from the repository
      - checkout
      - run:
          name: Install Vercel CLI
          command: npm install --global vercel@latest

      - run:
          name: Pull Vercel Environment Information
          command: vercel pull --yes --environment=production --token=$VERCEL_TOKEN

      - run:
          name: Build Project Artifacts
          command: vercel build --prod --token=$VERCEL_TOKEN

      - run:
          name: Deploy Project Artifacts to Vercel
          command: vercel deploy --prebuilt --prod --token=$VERCEL_TOKEN

workflows:
  # Below is the definition of your workflow.
  # Inside the workflow, you provide the jobs you want to run, e.g this workflow runs the build-and-test job above.
  # CircleCI will run this workflow on every commit.
  # For more details on extending your workflow, see the configuration docs: https://circleci.com/docs/configuration-reference/#workflows
  build_and_test:
    when:
      or:
        - equal: [pull_request, << pipeline.parameters.GHA_Event >>]
        - equal: [push, << pipeline.parameters.GHA_Event >>]
    jobs:
      - build
      - test:
          requires:
            - build
  deploy:
    when:
      equal: [push, << pipeline.parameters.GHA_Event >>]
    jobs:
      - build
      - test:
        requires:
          - build
      - deploy-to-vercel:
          requires:
            - test
          filters:
            branches:
              only: main
